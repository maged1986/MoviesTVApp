plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdkPreview "TiramisuPrivacySandbox"

    defaultConfig {
        applicationId "com.example.moviestv"
        minSdkPreview "29"
        minSdkVersion 29
        targetSdkPreview "29"
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }
    namespace 'com.example.moviestv'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    implementation "androidx.multidex:multidex:2.0.1"

    // Retrofit + GSON
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    //okhttp
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation("com.squareup.okhttp3:logging-interceptor:4.5.0")

    //Exoplayer
  /*  implementation 'com.google.android.exoplayer:exoplayer:2.6.1'
    implementation 'com.google.android.exoplayer:extension-leanback:2.6.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.6.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.6.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.6.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.6.1'
*/
    //rx java
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
   // kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    implementation files('libs\\YouTubeAndroidPlayerApi.jar')

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // optional - Test helpers for Lifecycle runtime
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"

    implementation 'com.google.dagger:hilt-android:2.44'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.44'

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.44'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-compiler:2.44'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    testAnnotationProcessor 'com.google.dagger:hilt-compiler:2.44'

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


}